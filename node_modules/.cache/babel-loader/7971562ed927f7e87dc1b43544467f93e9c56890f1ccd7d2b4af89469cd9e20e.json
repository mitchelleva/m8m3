{"ast":null,"code":"import * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as r } from \"@radix-ui/react-primitive\";\nimport { useSize as o } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContext as i } from \"@radix-ui/react-context\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as a } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nfunction p() {\n  return (p = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var o = arguments[r];\n      for (var t in o) Object.prototype.hasOwnProperty.call(o, t) && (e[t] = o[t]);\n    }\n    return e;\n  }).apply(this, arguments);\n}\nconst [l, c] = i(\"Popper\");\nexport const Popper = s.forwardRef((e, i) => {\n  const {\n      anchorRef: c,\n      side: f = \"bottom\",\n      sideOffset: d,\n      align: u = \"center\",\n      alignOffset: w,\n      collisionTolerance: m,\n      avoidCollisions: y = !0,\n      ...v\n    } = e,\n    [x, g] = s.useState(),\n    h = t(c),\n    R = s.useRef(null),\n    E = o(R),\n    A = s.useRef(null),\n    O = o(A),\n    P = n(i, R),\n    S = function () {\n      const [e, r] = s.useState(void 0);\n      return s.useEffect(() => {\n        let e;\n        function o() {\n          r({\n            width: window.innerWidth,\n            height: window.innerHeight\n          });\n        }\n        function t() {\n          window.clearTimeout(e), e = window.setTimeout(o, 100);\n        }\n        return o(), window.addEventListener(\"resize\", t), () => window.removeEventListener(\"resize\", t);\n      }, []), e;\n    }(),\n    b = S ? DOMRect.fromRect({\n      ...S,\n      x: 0,\n      y: 0\n    }) : void 0,\n    {\n      popperStyles: z,\n      arrowStyles: C,\n      placedSide: T,\n      placedAlign: j\n    } = a({\n      anchorRect: h,\n      popperSize: E,\n      arrowSize: O,\n      arrowOffset: x,\n      side: f,\n      sideOffset: d,\n      align: u,\n      alignOffset: w,\n      shouldAvoidCollisions: y,\n      collisionBoundariesRect: b,\n      collisionTolerance: m\n    }),\n    k = void 0 !== T;\n  return s.createElement(\"div\", {\n    style: z,\n    \"data-radix-popper-wrapper\": \"\"\n  }, s.createElement(l, {\n    arrowRef: A,\n    arrowStyles: C,\n    onArrowOffsetChange: g\n  }, s.createElement(r, p({\n    \"data-side\": T,\n    \"data-align\": j\n  }, v, {\n    style: {\n      ...v.style,\n      animation: k ? void 0 : \"none\"\n    },\n    ref: P\n  }))));\n});\nPopper.displayName = \"Popper\";\nexport const PopperArrow = s.forwardRef(function (r, o) {\n  const {\n      offset: t,\n      ...i\n    } = r,\n    n = c(\"PopperArrow\"),\n    {\n      onArrowOffsetChange: a\n    } = n;\n  return s.useEffect(() => a(t), [a, t]), s.createElement(\"span\", {\n    style: {\n      ...n.arrowStyles,\n      pointerEvents: \"none\"\n    }\n  }, s.createElement(\"span\", {\n    ref: n.arrowRef,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, s.createElement(e.Root, p({}, i, {\n    ref: o,\n    style: {\n      ...i.style,\n      display: \"block\"\n    }\n  }))));\n});\nPopperArrow.displayName = \"PopperArrow\";\nexport const Root = Popper;\nexport const Arrow = PopperArrow;","map":{"version":3,"names":["l","c","i","Popper","s","forwardRef","e","anchorRef","side","f","sideOffset","d","align","u","alignOffset","w","collisionTolerance","m","avoidCollisions","y","v","x","g","useState","h","t","R","useRef","E","o","A","O","P","n","S","r","useEffect","width","window","innerWidth","height","innerHeight","clearTimeout","setTimeout","addEventListener","removeEventListener","b","DOMRect","fromRect","popperStyles","z","arrowStyles","C","placedSide","T","placedAlign","j","a","anchorRect","popperSize","arrowSize","arrowOffset","shouldAvoidCollisions","collisionBoundariesRect","k","createElement","style","arrowRef","onArrowOffsetChange","p","animation","ref","displayName","PopperArrow","offset","pointerEvents","display","verticalAlign","Root","Arrow"],"sources":["/Users/mitchelleva/projects/me8porty/m8magic/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype PopperContextValue = {\n  arrowRef: React.RefObject<HTMLElement>;\n  onArrowOffsetChange: (offset?: number) => void;\n  arrowStyles: React.CSSProperties;\n};\n\nconst [PopperProvider, usePopperContext] = createContext<PopperContextValue>(POPPER_NAME);\n\ntype PopperOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof Primitive>,\n  {\n    anchorRef: React.RefObject<Measurable>;\n    side?: Side;\n    sideOffset?: number;\n    align?: Align;\n    alignOffset?: number;\n    collisionTolerance?: number;\n    avoidCollisions?: boolean;\n  }\n>;\n\ntype PopperPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof Primitive>,\n  PopperOwnProps\n>;\n\nconst Popper = React.forwardRef((props, forwardedRef) => {\n  const {\n    anchorRef,\n    side = 'bottom',\n    sideOffset,\n    align = 'center',\n    alignOffset,\n    collisionTolerance,\n    avoidCollisions = true,\n    ...popperProps\n  } = props;\n\n  const [arrowOffset, setArrowOffset] = React.useState<number>();\n  const anchorRect = useRect(anchorRef);\n  const popperRef = React.useRef<HTMLDivElement>(null);\n  const popperSize = useSize(popperRef);\n  const arrowRef = React.useRef<HTMLSpanElement>(null);\n  const arrowSize = useSize(arrowRef);\n\n  const composedPopperRef = useComposedRefs(forwardedRef, popperRef);\n\n  const windowSize = useWindowSize();\n  const collisionBoundariesRect = windowSize\n    ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n    : undefined;\n\n  const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n    anchorRect,\n    popperSize,\n    arrowSize,\n\n    // config\n    arrowOffset,\n    side,\n    sideOffset,\n    align,\n    alignOffset,\n    shouldAvoidCollisions: avoidCollisions,\n    collisionBoundariesRect,\n    collisionTolerance,\n  });\n  const isPlaced = placedSide !== undefined;\n\n  return (\n    <div style={popperStyles} data-radix-popper-wrapper=\"\">\n      <PopperProvider\n        arrowRef={arrowRef}\n        arrowStyles={arrowStyles}\n        onArrowOffsetChange={setArrowOffset}\n      >\n        <Primitive\n          data-side={placedSide}\n          data-align={placedAlign}\n          {...popperProps}\n          style={{\n            ...popperProps.style,\n            // if the Popper hasn't been placed yet (not all measurements done)\n            // we prevent animations so that users's animation don't kick in too early referring wrong sides\n            animation: !isPlaced ? 'none' : undefined,\n          }}\n          ref={composedPopperRef}\n        />\n      </PopperProvider>\n    </div>\n  );\n}) as PopperPrimitive;\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof ArrowPrimitive.Root>,\n  { offset?: number }\n>;\n\ntype PopperArrowPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof ArrowPrimitive.Root>,\n  PopperArrowOwnProps\n>;\n\nconst PopperArrow = React.forwardRef(function PopperArrow(props, forwardedRef) {\n  const { offset, ...arrowProps } = props;\n  const context = usePopperContext(ARROW_NAME);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.arrowRef}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n}) as PopperArrowPrimitive;\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Arrow = PopperArrow;\n\nexport {\n  Popper,\n  PopperArrow,\n  //\n  Root,\n  Arrow,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}