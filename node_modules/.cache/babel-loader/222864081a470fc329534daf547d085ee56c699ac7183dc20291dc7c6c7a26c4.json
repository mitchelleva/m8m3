{"ast":null,"code":"import { useId as t } from \"@radix-ui/react-id\";\nimport * as e from \"@radix-ui/react-visually-hidden\";\nimport { Slottable as o } from \"@radix-ui/react-slot\";\nimport { Portal as n } from \"@radix-ui/react-portal\";\nimport * as r from \"@radix-ui/react-popper\";\nimport { Primitive as i, extendPrimitive as a } from \"@radix-ui/react-primitive\";\nimport { useRect as s } from \"@radix-ui/react-use-rect\";\nimport { usePrevious as u } from \"@radix-ui/react-use-previous\";\nimport { useLayoutEffect as c } from \"@radix-ui/react-use-layout-effect\";\nimport { useControllableState as d } from \"@radix-ui/react-use-controllable-state\";\nimport { createContext as l } from \"@radix-ui/react-context\";\nimport { useComposedRefs as p } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as m } from \"@radix-ui/primitive\";\nimport * as E from \"react\";\nlet f, S;\nfunction T() {\n  return (T = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var o = arguments[e];\n      for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (t[n] = o[n]);\n    }\n    return t;\n  }).apply(this, arguments);\n}\nconst v = function (t, {\n    debug: e = !1,\n    warnOnUnknownTransitions: o = !1\n  } = {}) {\n    let n,\n      r,\n      i = t.initial,\n      a = t.context;\n    const s = [],\n      u = (c, d) => {\n        const l = t.states[i],\n          p = l.on && l.on[c];\n        if (void 0 === p) o && console.warn('From state: \"'.concat(i, '\", event \"').concat(c, '\" does not lead to any state'));else {\n          n = i, r = a, l.onLeaveState && l.onLeaveState(u);\n          const o = t.states[p];\n          o.onEnterState && o.onEnterState(u), i = p, void 0 !== d && (a = d), e && console.log({\n            previousState: n,\n            previousContext: r,\n            event: c,\n            state: i,\n            context: a\n          }), s.forEach(t => t({\n            state: i,\n            previousState: n,\n            context: a\n          }));\n        }\n      };\n    return {\n      subscribe: function (t) {\n        return s.push(t), () => {\n          s.splice(s.indexOf(t), 1);\n        };\n      },\n      transition: u,\n      getState: function () {\n        return i;\n      },\n      getContext: function () {\n        return a;\n      }\n    };\n  }({\n    initial: \"CLOSED\",\n    context: {\n      id: null\n    },\n    states: {\n      CLOSED: {\n        on: {\n          mouseEntered: \"WAITING_FOR_REST\",\n          focused: \"OPEN\"\n        }\n      },\n      WAITING_FOR_REST: {\n        onEnterState: function (t) {\n          clearTimeout(f), f = window.setTimeout(() => t(\"restTimerElapsed\"), 300);\n        },\n        onLeaveState: function () {\n          clearTimeout(f);\n        },\n        on: {\n          restTimerElapsed: \"OPEN\",\n          mouseMoved: \"WAITING_FOR_REST\",\n          mouseLeft: \"CLOSED\",\n          activated: \"DISMISSED\",\n          unmounted: \"CLOSED\"\n        }\n      },\n      OPEN: {\n        on: {\n          mouseLeft: \"CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD\",\n          mouseEntered: \"OPEN\",\n          mouseMoved: \"OPEN\",\n          activated: \"DISMISSED\",\n          blurred: \"CLOSED\",\n          triggerMoved: \"CLOSED\",\n          unmounted: \"CLOSED\"\n        }\n      },\n      CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD: {\n        onEnterState: function (t) {\n          clearTimeout(S), S = window.setTimeout(() => t(\"skipRestTimerElapsed\"), 300);\n        },\n        onLeaveState: function () {\n          clearTimeout(S);\n        },\n        on: {\n          skipRestTimerElapsed: \"CLOSED\",\n          mouseEntered: \"OPEN\",\n          focused: \"OPEN\",\n          activated: \"DISMISSED\",\n          unmounted: \"CLOSED\"\n        }\n      },\n      DISMISSED: {\n        on: {\n          mouseLeft: \"CLOSED\",\n          blurred: \"CLOSED\",\n          unmounted: \"CLOSED\"\n        }\n      }\n    }\n  }),\n  [O, g] = l(\"Tooltip\");\nexport const Tooltip = e => {\n  const {\n      children: o,\n      open: n,\n      defaultOpen: r = !1,\n      onOpenChange: i\n    } = e,\n    a = E.useRef(null),\n    s = t(),\n    [u = !1, l] = d({\n      prop: n,\n      defaultProp: r,\n      onChange: i\n    }),\n    [p, m] = E.useState(n ? \"instant-open\" : \"closed\");\n  return E.useEffect(() => v.subscribe(({\n    state: t,\n    context: e\n  }) => {\n    \"OPEN\" === t && e.id === s ? l(!0) : l(!1);\n  }), [s, l]), E.useEffect(() => v.subscribe(({\n    state: t,\n    previousState: e\n  }) => {\n    \"OPEN\" === t && (\"WAITING_FOR_REST\" === e && m(\"delayed-open\"), \"CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD\" !== e && \"CLOSED\" !== e || m(\"instant-open\")), \"CLOSED\" === t && m(\"closed\");\n  }), []), E.useEffect(() => () => {\n    v.transition(\"unmounted\", {\n      id: s\n    });\n  }, [s]), c(() => {\n    !0 === n && v.transition(\"mouseEntered\", {\n      id: s\n    });\n  }, [s, n]), E.createElement(O, {\n    triggerRef: a,\n    contentId: s,\n    open: u,\n    stateAttribute: p\n  }, o);\n};\nTooltip.displayName = \"Tooltip\";\nconst I = \"button\";\nexport const TooltipTrigger = E.forwardRef((t, e) => {\n  const {\n      as: o = I,\n      ...n\n    } = t,\n    r = g(\"TooltipTrigger\"),\n    a = p(e, r.triggerRef);\n  return E.createElement(i, T({\n    type: \"button\",\n    \"aria-describedby\": r.open ? r.contentId : void 0,\n    \"data-state\": r.stateAttribute\n  }, n, {\n    as: o,\n    ref: a,\n    onMouseEnter: m(t.onMouseEnter, () => v.transition(\"mouseEntered\", {\n      id: r.contentId\n    })),\n    onMouseMove: m(t.onMouseMove, () => v.transition(\"mouseMoved\", {\n      id: r.contentId\n    })),\n    onMouseLeave: m(t.onMouseLeave, () => {\n      v.getContext().id === r.contentId && v.transition(\"mouseLeft\", {\n        id: r.contentId\n      });\n    }),\n    onFocus: m(t.onFocus, () => v.transition(\"focused\", {\n      id: r.contentId\n    })),\n    onBlur: m(t.onBlur, () => {\n      v.getContext().id === r.contentId && v.transition(\"blurred\", {\n        id: r.contentId\n      });\n    }),\n    onMouseDown: m(t.onMouseDown, () => v.transition(\"activated\", {\n      id: r.contentId\n    })),\n    onKeyDown: m(t.onKeyDown, t => {\n      \"Escape\" !== t.key && \"Enter\" !== t.key && \" \" !== t.key || v.transition(\"activated\", {\n        id: r.contentId\n      });\n    })\n  }));\n});\nTooltipTrigger.displayName = \"TooltipTrigger\";\nexport const TooltipContent = E.forwardRef((t, e) => g(\"TooltipContent\").open ? E.createElement(x, T({\n  ref: e\n}, t)) : null);\nconst x = E.forwardRef((t, i) => {\n  const {\n      children: a,\n      \"aria-label\": s,\n      anchorRef: u,\n      portalled: c = !0,\n      ...d\n    } = t,\n    l = g(\"TooltipContent\"),\n    p = c ? n : E.Fragment;\n  return E.createElement(p, null, E.createElement(C, null), E.createElement(r.Root, T({\n    \"data-state\": l.stateAttribute\n  }, d, {\n    ref: i,\n    anchorRef: u || l.triggerRef,\n    style: {\n      ...d.style,\n      \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  }), E.createElement(o, null, a), E.createElement(e.Root, {\n    id: l.contentId,\n    role: \"tooltip\"\n  }, s || a)));\n});\nTooltipContent.displayName = \"TooltipContent\";\nexport const TooltipArrow = a(r.Arrow, {\n  displayName: \"TooltipArrow\"\n});\nfunction C() {\n  const t = g(\"CheckTriggerMoved\"),\n    e = s(t.triggerRef),\n    o = null == e ? void 0 : e.left,\n    n = u(o),\n    r = null == e ? void 0 : e.top,\n    i = u(r);\n  return E.useEffect(() => {\n    (void 0 !== n && n !== o || void 0 !== i && i !== r) && v.transition(\"triggerMoved\", {\n      id: t.contentId\n    });\n  }, [t.contentId, n, i, o, r]), null;\n}\nexport const Root = Tooltip;\nexport const Trigger = TooltipTrigger;\nexport const Content = TooltipContent;\nexport const Arrow = TooltipArrow;","map":{"version":3,"names":["f","S","T","Object","assign","t","e","arguments","length","o","n","prototype","hasOwnProperty","call","apply","v","debug","warnOnUnknownTransitions","r","i","initial","a","context","s","u","transition","c","d","l","states","p","on","console","warn","concat","onLeaveState","onEnterState","log","previousState","previousContext","event","state","forEach","subscribe","push","splice","indexOf","getState","getContext","id","CLOSED","mouseEntered","focused","WAITING_FOR_REST","clearTimeout","window","setTimeout","restTimerElapsed","mouseMoved","mouseLeft","activated","unmounted","OPEN","blurred","triggerMoved","CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD","skipRestTimerElapsed","DISMISSED","O","g","Tooltip","children","open","defaultOpen","onOpenChange","E","useRef","prop","defaultProp","onChange","m","useState","useEffect","createElement","triggerRef","contentId","stateAttribute","displayName","I","TooltipTrigger","forwardRef","as","type","ref","onMouseEnter","onMouseMove","onMouseLeave","onFocus","onBlur","onMouseDown","onKeyDown","key","TooltipContent","x","anchorRef","portalled","Fragment","C","Root","style","role","TooltipArrow","Arrow","left","top","Trigger","Content"],"sources":["/Users/mitchelleva/projects/me8porty/m8magic/node_modules/leva/node_modules/@radix-ui/react-tooltip/dist/packages/react/tooltip/src/machine.tsx","/Users/mitchelleva/projects/me8porty/m8magic/node_modules/leva/node_modules/@radix-ui/react-tooltip/dist/packages/react/tooltip/src/Tooltip.tsx"],"sourcesContent":["/* -------------------------------------------------------------------------------------------------\n * Core state machine implementation\n * TODO: Consider adopting a state machine lib or reimplementing for broader usage\n * -----------------------------------------------------------------------------------------------*/\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nexport type StateChart<State extends string, Event extends string, Context> = {\n  initial: State;\n  context: Context;\n  states: Record<State, StateDefinition<State, Event, Context>>;\n};\n\ntype StateDefinition<State, Event extends string, Context> = {\n  onEnterState?: (transitionFn: TransitionFn<Event, Context>) => void;\n  onLeaveState?: (transitionFn: TransitionFn<Event, Context>) => void;\n  on?: { [index in Event]?: State };\n};\n\nexport type TransitionFn<Event, Context> = (event: Event, context?: Context) => void;\n\nexport function createStateMachine<State extends string, Event extends string, Context>(\n  stateChart: StateChart<State, Event, Context>,\n  { debug = false, warnOnUnknownTransitions = !isProduction } = {}\n) {\n  let PREVIOUS_STATE: State | undefined;\n  let CURRENT_STATE = stateChart.initial;\n  let PREVIOUS_CONTEXT: Context | undefined;\n  let CURRENT_CONTEXT = stateChart.context;\n\n  type CallbackFn = (args: { state: State; previousState?: State; context: Context }) => void;\n  const subscriptions: Array<CallbackFn> = [];\n\n  function subscribe(callback: CallbackFn) {\n    subscriptions.push(callback);\n    return () => {\n      subscriptions.splice(subscriptions.indexOf(callback), 1);\n    };\n  }\n\n  function notify() {\n    subscriptions.forEach((callback) =>\n      callback({\n        state: CURRENT_STATE,\n        previousState: PREVIOUS_STATE,\n        context: CURRENT_CONTEXT,\n      })\n    );\n  }\n\n  const transition: TransitionFn<Event, Context> = (event, context) => {\n    const stateDefinition = stateChart.states[CURRENT_STATE];\n\n    // we cast to `State | undefined` because otherwise the type of `nextState`\n    // would be `{ [index in Event]?: State | undefined; }[Event] | undefined`\n    // and would cause issue later when trying to grab `nextStateDefinition`\n    // as it would conflict with the type of `StateChart.states` which is\n    // `Record<State, StateDefinition<State, Event>>`\n    const nextState: State | undefined = stateDefinition.on && stateDefinition.on[event];\n\n    if (nextState === undefined) {\n      if (warnOnUnknownTransitions) {\n        console.warn(`From state: \"${CURRENT_STATE}\", event \"${event}\" does not lead to any state`);\n      }\n    } else {\n      PREVIOUS_STATE = CURRENT_STATE;\n      PREVIOUS_CONTEXT = CURRENT_CONTEXT;\n\n      if (stateDefinition.onLeaveState) {\n        stateDefinition.onLeaveState(transition);\n      }\n\n      const nextStateDefinition = stateChart.states[nextState];\n\n      if (nextStateDefinition.onEnterState) {\n        nextStateDefinition.onEnterState(transition);\n      }\n\n      CURRENT_STATE = nextState;\n\n      if (context !== undefined) {\n        CURRENT_CONTEXT = context;\n      }\n\n      if (debug) {\n        console.log({\n          previousState: PREVIOUS_STATE,\n          previousContext: PREVIOUS_CONTEXT,\n          event,\n          state: CURRENT_STATE,\n          context: CURRENT_CONTEXT,\n        });\n      }\n\n      notify();\n    }\n  };\n\n  function getState() {\n    return CURRENT_STATE;\n  }\n\n  function getContext() {\n    return CURRENT_CONTEXT;\n  }\n\n  return {\n    subscribe,\n    transition,\n    getState,\n    getContext,\n  };\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Core state machine implementation\n * TODO: Consider adopting a state machine lib or reimplementing for broader usage\n * -----------------------------------------------------------------------------------------------*/\n\n// How long the mouse needs to stop moving for the tooltip to open\nconst REST_THRESHOLD_DURATION = 300;\n\n// How much time does the user has to move from one tooltip to another without incurring the rest wait\nconst SKIP_REST_THRESHOLD_DURATION = 300;\n\ntype TooltipState =\n  // tooltip is closed\n  | 'CLOSED'\n\n  // still closed\n  // we are waiting for the mouse to stop moving (REST_THRESHOLD_DURATION)\n  | 'WAITING_FOR_REST'\n\n  // tooltip is open\n  | 'OPEN'\n\n  // tooltip is closed\n  // we are checking if the mouse enters another tooltip trigger (SKIP_REST_THRESHOLD_DURATION)\n  | 'CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD'\n\n  // tooltip has been dismissed via click or keyboard action (escape, space, enter)\n  | 'DISMISSED';\n\ntype TooltipEvent =\n  | 'mouseEntered'\n  | 'mouseMoved'\n  | 'mouseLeft'\n  | 'restTimerElapsed'\n  | 'skipRestTimerElapsed'\n  | 'focused'\n  | 'blurred'\n  | 'activated'\n  | 'triggerMoved'\n  | 'unmounted';\n\ntype TooltipContext = { id: string | null };\n\ntype TooltipStateChart = StateChart<TooltipState, TooltipEvent, TooltipContext>;\ntype TooltipTransitionFn = TransitionFn<TooltipEvent, TooltipContext>;\n\nexport const stateChart: TooltipStateChart = {\n  initial: 'CLOSED',\n  context: { id: null },\n  states: {\n    CLOSED: {\n      on: {\n        mouseEntered: 'WAITING_FOR_REST',\n        focused: 'OPEN',\n      },\n    },\n    WAITING_FOR_REST: {\n      onEnterState: startRestTimer,\n      onLeaveState: clearRestTimer,\n      on: {\n        restTimerElapsed: 'OPEN',\n        mouseMoved: 'WAITING_FOR_REST',\n        mouseLeft: 'CLOSED',\n        activated: 'DISMISSED',\n        unmounted: 'CLOSED',\n      },\n    },\n    OPEN: {\n      on: {\n        mouseLeft: 'CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD',\n        mouseEntered: 'OPEN',\n        mouseMoved: 'OPEN',\n        activated: 'DISMISSED',\n        blurred: 'CLOSED',\n        triggerMoved: 'CLOSED',\n        unmounted: 'CLOSED',\n      },\n    },\n    CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD: {\n      onEnterState: startSkipRestTimer,\n      onLeaveState: clearSkipRestTimer,\n      on: {\n        skipRestTimerElapsed: 'CLOSED',\n        mouseEntered: 'OPEN',\n        focused: 'OPEN',\n        activated: 'DISMISSED',\n        unmounted: 'CLOSED',\n      },\n    },\n    DISMISSED: {\n      on: {\n        mouseLeft: 'CLOSED',\n        blurred: 'CLOSED',\n        unmounted: 'CLOSED',\n      },\n    },\n  },\n};\n\n// The rest timer is used to check for the user \"resting\" a certain\n// period of time over the trigger, before deciding to open the tooltip.\nlet restTimerId: number;\n\nfunction startRestTimer(transition: TooltipTransitionFn) {\n  clearTimeout(restTimerId);\n  restTimerId = window.setTimeout(() => transition('restTimerElapsed'), REST_THRESHOLD_DURATION);\n}\n\nfunction clearRestTimer() {\n  clearTimeout(restTimerId);\n}\n\n// The skip rest timer is used to check if the user enters another tooltip trigger\n// in a certain period of time, in which case, we would skip the rest timer and open\n// the tooltip instantly.\nlet skipRestTimerId: number;\n\nfunction startSkipRestTimer(transition: TooltipTransitionFn) {\n  clearTimeout(skipRestTimerId);\n  skipRestTimerId = window.setTimeout(\n    () => transition('skipRestTimerElapsed'),\n    SKIP_REST_THRESHOLD_DURATION\n  );\n}\n\nfunction clearSkipRestTimer() {\n  clearTimeout(skipRestTimerId);\n}\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { Primitive, extendPrimitive } from '@radix-ui/react-primitive';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Slottable } from '@radix-ui/react-slot';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\nimport { useId } from '@radix-ui/react-id';\nimport { createStateMachine, stateChart } from './machine';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\n\n/* -------------------------------------------------------------------------------------------------\n * State machine\n * -----------------------------------------------------------------------------------------------*/\n\ntype StateAttribute = 'closed' | 'delayed-open' | 'instant-open';\nconst stateMachine = createStateMachine(stateChart);\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  stateAttribute: StateAttribute;\n};\n\nconst [TooltipProvider, useTooltipContext] = createContext<TooltipContextValue>(TOOLTIP_NAME);\n\ntype TooltipOwnProps = {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n};\n\nconst Tooltip: React.FC<TooltipOwnProps> = (props) => {\n  const { children, open: openProp, defaultOpen = false, onOpenChange } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentId = useId();\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [stateAttribute, setStateAttribute] = React.useState<StateAttribute>(\n    openProp ? 'instant-open' : 'closed'\n  );\n\n  // control open state using state machine subscription\n  React.useEffect(() => {\n    const unsubscribe = stateMachine.subscribe(({ state, context }) => {\n      if (state === 'OPEN' && context.id === contentId) {\n        setOpen(true);\n      } else {\n        setOpen(false);\n      }\n    });\n\n    return unsubscribe;\n  }, [contentId, setOpen]);\n\n  // sync state attribute with using state machine subscription\n  React.useEffect(() => {\n    const unsubscribe = stateMachine.subscribe(({ state, previousState }) => {\n      if (state === 'OPEN') {\n        if (previousState === 'WAITING_FOR_REST') {\n          setStateAttribute('delayed-open');\n        }\n        if (\n          previousState === 'CHECKING_IF_SHOULD_SKIP_REST_THRESHOLD' ||\n          previousState === 'CLOSED'\n        ) {\n          setStateAttribute('instant-open');\n        }\n      }\n      if (state === 'CLOSED') {\n        setStateAttribute('closed');\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // send transition if the component unmounts\n  React.useEffect(() => {\n    return () => {\n      stateMachine.transition('unmounted', { id: contentId });\n    };\n  }, [contentId]);\n\n  // if we're controlling the component\n  // put the state machine in the appropriate state\n  useLayoutEffect(() => {\n    if (openProp === true) {\n      stateMachine.transition('mouseEntered', { id: contentId });\n    }\n  }, [contentId, openProp]);\n\n  return (\n    <TooltipProvider\n      triggerRef={triggerRef}\n      contentId={contentId}\n      open={open}\n      stateAttribute={stateAttribute}\n    >\n      {children}\n    </TooltipProvider>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\nconst TRIGGER_DEFAULT_TAG = 'button';\n\ntype TooltipTriggerOwnProps = Polymorphic.OwnProps<typeof Primitive>;\ntype TooltipTriggerPrimitive = Polymorphic.ForwardRefComponent<\n  typeof TRIGGER_DEFAULT_TAG,\n  TooltipTriggerOwnProps\n>;\n\nconst TooltipTrigger = React.forwardRef((props, forwardedRef) => {\n  const { as = TRIGGER_DEFAULT_TAG, ...triggerProps } = props;\n  const context = useTooltipContext(TRIGGER_NAME);\n  const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n  return (\n    <Primitive\n      type=\"button\"\n      aria-describedby={context.open ? context.contentId : undefined}\n      data-state={context.stateAttribute}\n      {...triggerProps}\n      as={as}\n      ref={composedTriggerRef}\n      onMouseEnter={composeEventHandlers(props.onMouseEnter, () =>\n        stateMachine.transition('mouseEntered', { id: context.contentId })\n      )}\n      onMouseMove={composeEventHandlers(props.onMouseMove, () =>\n        stateMachine.transition('mouseMoved', { id: context.contentId })\n      )}\n      onMouseLeave={composeEventHandlers(props.onMouseLeave, () => {\n        const stateMachineContext = stateMachine.getContext();\n        if (stateMachineContext.id === context.contentId) {\n          stateMachine.transition('mouseLeft', { id: context.contentId });\n        }\n      })}\n      onFocus={composeEventHandlers(props.onFocus, () =>\n        stateMachine.transition('focused', { id: context.contentId })\n      )}\n      onBlur={composeEventHandlers(props.onBlur, () => {\n        const stateMachineContext = stateMachine.getContext();\n        if (stateMachineContext.id === context.contentId) {\n          stateMachine.transition('blurred', { id: context.contentId });\n        }\n      })}\n      onMouseDown={composeEventHandlers(props.onMouseDown, () =>\n        stateMachine.transition('activated', { id: context.contentId })\n      )}\n      onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n        if (event.key === 'Escape' || event.key === 'Enter' || event.key === ' ') {\n          stateMachine.transition('activated', { id: context.contentId });\n        }\n      })}\n    />\n  );\n}) as TooltipTriggerPrimitive;\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentOwnProps = Polymorphic.OwnProps<typeof TooltipContentImpl>;\ntype TooltipContentPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof TooltipContentImpl>,\n  TooltipContentOwnProps\n>;\n\nconst TooltipContent = React.forwardRef((props, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME);\n  return context.open ? <TooltipContentImpl ref={forwardedRef} {...props} /> : null;\n}) as TooltipContentPrimitive;\n\ntype PopperPrimitiveOwnProps = Polymorphic.OwnProps<typeof PopperPrimitive.Root>;\ntype TooltipContentImplOwnProps = Polymorphic.Merge<\n  PopperPrimitiveOwnProps,\n  {\n    /**\n     * A more descriptive label for accessibility purpose\n     */\n    'aria-label'?: string;\n\n    anchorRef?: PopperPrimitiveOwnProps['anchorRef'];\n\n    /**\n     * Whether the Tooltip should render in a Portal\n     * (default: `true`)\n     */\n    portalled?: boolean;\n  }\n>;\n\ntype TooltipContentImplPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof PopperPrimitive.Root>,\n  TooltipContentImplOwnProps\n>;\n\nconst TooltipContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { children, 'aria-label': ariaLabel, anchorRef, portalled = true, ...contentProps } = props;\n  const context = useTooltipContext(CONTENT_NAME);\n  const PortalWrapper = portalled ? Portal : React.Fragment;\n\n  return (\n    <PortalWrapper>\n      <CheckTriggerMoved />\n      <PopperPrimitive.Root\n        data-state={context.stateAttribute}\n        {...contentProps}\n        ref={forwardedRef}\n        anchorRef={anchorRef || context.triggerRef}\n        style={{\n          ...contentProps.style,\n          // re-namespace exposed content custom property\n          ['--radix-tooltip-content-transform-origin' as any]: 'var(--radix-popper-transform-origin)',\n        }}\n      >\n        <Slottable>{children}</Slottable>\n        <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n          {ariaLabel || children}\n        </VisuallyHiddenPrimitive.Root>\n      </PopperPrimitive.Root>\n    </PortalWrapper>\n  );\n}) as TooltipContentImplPrimitive;\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst TooltipArrow = extendPrimitive(PopperPrimitive.Arrow, { displayName: 'TooltipArrow' });\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction CheckTriggerMoved() {\n  const context = useTooltipContext('CheckTriggerMoved');\n\n  const triggerRect = useRect(context.triggerRef);\n  const triggerLeft = triggerRect?.left;\n  const previousTriggerLeft = usePrevious(triggerLeft);\n  const triggerTop = triggerRect?.top;\n  const previousTriggerTop = usePrevious(triggerTop);\n\n  React.useEffect(() => {\n    // checking if the user has scrolled…\n    const hasTriggerMoved =\n      (previousTriggerLeft !== undefined && previousTriggerLeft !== triggerLeft) ||\n      (previousTriggerTop !== undefined && previousTriggerTop !== triggerTop);\n\n    if (hasTriggerMoved) {\n      stateMachine.transition('triggerMoved', { id: context.contentId });\n    }\n  }, [context.contentId, previousTriggerLeft, previousTriggerTop, triggerLeft, triggerTop]);\n\n  return null;\n}\n\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Root,\n  Trigger,\n  Content,\n  Arrow,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}